package com.empservice.employee.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.crypto.password.NoOpPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

import com.empservice.employee.service.CustomUserDetailService;

@Configuration
@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter {

	@Autowired CustomUserDetailService userDetailsService;
	@Override
	protected void configure(AuthenticationManagerBuilder auth) throws Exception {

		auth.userDetailsService(userDetailsService);
	}
	
	@Bean
	public PasswordEncoder passwordEncoder() {
		return NoOpPasswordEncoder.getInstance();
	}
	
    @Override
    protected void configure(HttpSecurity http) throws Exception {
//        http
//            .authorizeRequests()
//                .antMatchers("/public/**").permitAll() // make all URLs starting with "/public" public
//                .anyRequest().authenticated();
    	
    	http.authorizeHttpRequests()
////		.antMatchers("/private/admin/**").hasRole("ADMIN")
////		.antMatchers("/private/user/**").hasAnyRole("USER","ADMIN")
//		.antMatchers("/public/**").permitAll()
//		.anyRequest()
//		.authenticated().and().
////		.and()
////		.formLogin().loginPage("/sign-in")
////		.loginProcessingUrl("/do-login")
////		.defaultSuccessUrl("/private/index")
//	//	.failureUrl("")
		.and().csrf().disable();
    
    }
	
	
}
